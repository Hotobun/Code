'''
判断一个 9x9 的数独是否有效。只需要根据以下规则，验证已经填入的数字是否有效即可。

数字 1-9 在每一行只能出现一次。
数字 1-9 在每一列只能出现一次。
数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。

示例 1:

输入:
[
  ["5","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]
输出: true
'''

class Solution(object):
    def isValidSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: bool
        """
        # 判断行 
        d = dict() 
        for j in board:
            for i in j:
                if i != '.':
                    d[i] = d.get(i,0) + 1
                    if d[i] > 1:
                        return False
            d.clear()
            
        # 判断列
        d.clear()
        for i in range(9):
            for j in board:
                if j[i] != '.':
                    d[j[i]] = d.get(j[i], 0) + 1
                    if d[j[i]] > 1:
                        return False
            d.clear()

        # 判断九宫格
        for a in [0,3,6]:
            for b in [0,3,6]:
                d.clear()
                for i in range(a,a+3):
                    for j in range(b,b+3):
                        if board[i][j] != '.':
                            d[board[i][j]] = d.get(board[i][j],0)+1
                            if d[board[i][j]] > 1:
                                return False



        return True

















if __name__ == "__main__":
    s = Solution()
    args = [
  ["5","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]
    result = s.isValidSudoku(args)
    print(result)